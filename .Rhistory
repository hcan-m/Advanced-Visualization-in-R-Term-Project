# Set the working directory
setwd('...')
# Read database
spare.time <- read.csv("Data/churn.csv", sep = ',')
# Read libs
head(spare.time)
knitr::opts_chunk$set(echo = TRUE)
churn <- read.csv("Data/churn.csv", sep = ',')
iris[,-5]
iris
## Plot 1
```{r}
ggplot(churn, aes(x = Customer_Age, fill = Gender)) +
geom_histogram(data = iris[,-4], fill = "grey", alpha = .5) +
geom_histogram(colour = "black") +
facet_wrap(~ Gender) + guides(fill = FALSE)
library(GGally)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(gridExtra)
library(cowplot)
library(ggforce)
library(GGally)
churn <- read.csv("Data/churn.csv", sep = ',')
ggplot(churn, aes(x = Customer_Age, fill = Gender)) +
geom_histogram(data = iris[,-4], fill = "grey", alpha = .5) +
geom_histogram(colour = "black") +
facet_wrap(~ Gender) + guides(fill = FALSE)
ggplot(churn, aes(x = Customer_Age, fill = Gender)) +
geom_histogram(data = iris[,-4], fill = "grey", alpha = .5)
ggplot(churn, aes(x = Customer_Age, fill = Gender)) +
geom_histogram(data = churn[,-4], fill = "grey", alpha = .5) +
geom_histogram(colour = "black") +
facet_wrap(~ Gender) + guides(fill = FALSE)
ggplot(churn, aes(x = Credit_Limit, fill = Gender)) +
geom_histogram(data = churn[,-4], fill = "grey", alpha = .5) +
geom_histogram(colour = "black") +
facet_wrap(~ Gender) + guides(fill = FALSE)
ggplot(churn, aes(x = Credit_Limit, fill = Education_Level)) +
geom_histogram(data = churn[,-6], fill = "grey", alpha = .5) +
geom_histogram(colour = "black") +
facet_wrap(~ Gender) + guides(fill = FALSE)
ggplot(churn, aes(x = Credit_Limit, fill = Education_Level)) +
geom_histogram(data = churn[,-6], fill = "grey", alpha = .5) +
geom_histogram(colour = "black") +
facet_wrap(~ Education_Level) + guides(fill = FALSE)
ggviolin(churn, x = "Education_Level", y = "Total_Revolving_Bal",
fill = "Education_Level", palette = "jco",
add = "boxplot", add.params = list(fill = "white"))  +
stat_compare_means(method = 'anova') +
stat_compare_means(comparisons = my_comp)
library(ggpubr)
ggviolin(churn, x = "Education_Level", y = "Total_Revolving_Bal",
fill = "Education_Level", palette = "jco",
add = "boxplot", add.params = list(fill = "white"))  +
stat_compare_means(method = 'anova') +
stat_compare_means(comparisons = my_comp)
unique(churn$Education_Level)
my_comp <- list( c("Unknown", "Uneducated"), c("Uneducated", "High School"), c("High School", "College"), c("College", "Graduate"), c("Graduate", "Post-Graduate"), c("Post-Graduate", "Doctorate") )
ggviolin(churn, x = "Education_Level", y = "Total_Revolving_Bal",
fill = "Education_Level", palette = "jco",
add = "boxplot", add.params = list(fill = "white"))  +
stat_compare_means(method = 'anova') +
stat_compare_means(comparisons = my_comp)
is.na(churn)
sum(is.na(churn))
sum(churn=="Unknown")
sum(churn=="Unknown")
colsum(churn=="Unknown")
colSums(churn=="Unknown")
colSums(churn[,c(6,7,8)]=="Unknown")
## I think we should remove those Unknowns
churnN <- churn[churn!="Unknown"]
churn[churn!="Unknown"]
## I think we should remove those Unknowns
churnN <- churn[churn!="Unknown",]
churnN <- read.csv("Data/churn.csv", sep = ',', na.strings = c("NA", "N/A", "Unknown"))
## I think we should remove those Unknowns
is.na(churnN)
## I think we should remove those Unknowns
sum(is.na(churnN))
## I think we should remove those Unknowns
churnNN <- drop_na(churnN)
churnNN$Attrition_Flag
table(churnNN$Attrition_Flag)
#table(churnNN$Attrition_Flag)
table(churn$Attrition_Flag)
table(churnNN$Attrition_Flag)
table(churn$Attrition_Flag)
table(churnNN$Attrition_Flag)
table(churn$Attrition_Flag)
table(churnNN$Attrition_Flag)
table(churn$Attrition_Flag)
table(churn$Attrition_Flag)
```{r}
table(churnNN$Attrition_Flag)
table(churn$Attrition_Flag)[1]
table(churn$Attrition_Flag)[1][1]
table(churn$Attrition_Flag)[1][2]
table(churn$Attrition_Flag)[1]
table(churn$Attrition_Flag)
margin.table(churn$Attrition_Flag)
table(churn$Attrition_Flag)
prop.table(churn$Attrition_Flag)
table(churn$Attrition_Flag)
prop.table(table(churn$Attrition_Flag))
prop.table(table(churnNN$Attrition_Flag))
ggplot(churnNN, aes(x = Credit_Limit, fill = Education_Level)) +
geom_histogram(data = churn[,-6], fill = "grey", alpha = .5) +
geom_histogram(colour = "black") +
facet_wrap(~ Education_Level) +
guides(fill = FALSE)
unique(churnNN$Education_Level)
my_comp <- list( c("Uneducated", "High School"), c("High School", "College"), c("College", "Graduate"), c("Graduate", "Post-Graduate"), c("Post-Graduate", "Doctorate") )
my_comp <- list( c("Uneducated", "High School"), c("High School", "College"), c("College", "Graduate"), c("Graduate", "Post-Graduate"), c("Post-Graduate", "Doctorate") )
ggviolin(churnNN, x = "Education_Level", y = "Total_Revolving_Bal",
fill = "Education_Level", palette = "jco",
add = "boxplot", add.params = list(fill = "white"))  +
stat_compare_means(method = 'anova') +
stat_compare_means(comparisons = my_comp)
